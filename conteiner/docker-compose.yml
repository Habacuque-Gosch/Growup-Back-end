version: '3.9'

services:
  web:
    build: .
    container_name: django_app
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             daphne -b 0.0.0.0 -p 8000 your_django_project.asgi:application"
    volumes:
      - .:/app
    expose:
      - "8000"
    depends_on:
      - postgres
      # - redis
      # - rabbitmq
    environment:
      - DJANGO_SETTINGS_MODULE=setup.settings
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/postgres
    restart: always

  # celery:
  #   build: .
  #   container_name: celery_worker
  #   command: celery -A server_django worker --loglevel=info
  #   volumes:
  #     - .:/app
  #   depends_on:
  #     - web
  #     # - rabbitmq
  #     # - redis
  #   environment:
  #     - DJANGO_SETTINGS_MODULE=setup.settings
  #     - DATABASE_URL=postgres://postgres:postgres@postgres:5432/postgres
  #   restart: always

  # celery-beat:
  #   build: .
  #   container_name: celery_beat
  #   command: celery -A server_django beat --loglevel=info
  #   volumes:
  #     - .:/app
  #   depends_on:
  #     - web
  #     - rabbitmq
  #     - redis
  #   environment:
  #     - DJANGO_SETTINGS_MODULE=setup.settings
  #     - DATABASE_URL=postgres://postgres:postgres@postgres:5432/postgres
  #   restart: always

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    restart: always

  # redis:
  #   image: redis:7
  #   container_name: redis
  #   ports:
  #     - "6379:6379"
  #   restart: always

  # rabbitmq:
  #   image: rabbitmq:3-management
  #   container_name: rabbitmq
  #   ports:
  #     - "5672:5672"
  #     - "15672:15672"
  #   restart: always

  nginx:
    image: nginx:1.25
    container_name: nginx_proxy
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - web
    restart: always

volumes:
  pg_data:
